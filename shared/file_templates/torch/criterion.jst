require('torch')
require('nn')
require('./EBSequenceLengthCriterion')

local {{=it.criterionName}}, parent = torch.class('nn.{{=it.criterionName}}', 'nn.Criterion')

function {{=it.criterionName}}:__init(trainingScript)
    parent.__init(self)

    -- Create a joined criterion for each field in the output
    self.criterion = {{= it.mainCriterion.generateLuaCode('    ')}}

    self.output = 0
    self.gradInput = {}
end


function {{=it.criterionName}}:updateOutput(input, target)
    return self.criterion:updateOutput(input, target)
end


function {{=it.criterionName}}:updateGradInput(input, target)
    return self.criterion:updateGradInput(input, target)
end


function {{=it.criterionName}}:type(type, tensorCache)
   self.gradInput = {}
   return parent.type(self, type, tensorCache)
end
